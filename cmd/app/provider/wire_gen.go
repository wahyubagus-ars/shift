// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package provider

import (
	"github.com/google/wire"
	"go-shift/cmd/app/controller"
	"go-shift/cmd/app/repository"
	"go-shift/cmd/app/service"
	"go-shift/config"
)

// Injectors from wire.go:

func Wire() *Initialization {
	db := config.ConnectToMysql()
	client := config.ConnectToMongoDb()
	userRepositoryImpl := provideUserRepository(db, client)
	authServiceImpl := provideAuthService(userRepositoryImpl)
	authControllerImpl := provideAuthController(authServiceImpl)
	initialization := NewInitialization(authControllerImpl, authServiceImpl, userRepositoryImpl)
	return initialization
}

// wire.go:

type Initialization struct {
	AuthCtrl controller.AuthController
	AuthSvc  service.AuthService
	UserRepo repository.UserRepository
}

var mysql = wire.NewSet(config.ConnectToMysql)

var mongodb = wire.NewSet(config.ConnectToMongoDb)

func NewInitialization(
	authCtrl controller.AuthController,
	authService service.AuthService,
	userRepo repository.UserRepository,
) *Initialization {
	return &Initialization{
		AuthCtrl: authCtrl,
		AuthSvc:  authService,
		UserRepo: userRepo,
	}
}
